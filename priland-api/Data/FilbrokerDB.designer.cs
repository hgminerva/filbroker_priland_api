#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace priland_api.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="filbroker_priland")]
	public partial class FilbrokerDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InsertTrnSoldUnitRequirementActivity(TrnSoldUnitRequirementActivity instance);
    partial void UpdateTrnSoldUnitRequirementActivity(TrnSoldUnitRequirementActivity instance);
    partial void DeleteTrnSoldUnitRequirementActivity(TrnSoldUnitRequirementActivity instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertMstBroker(MstBroker instance);
    partial void UpdateMstBroker(MstBroker instance);
    partial void DeleteMstBroker(MstBroker instance);
    partial void InsertMstCheckList(MstCheckList instance);
    partial void UpdateMstCheckList(MstCheckList instance);
    partial void DeleteMstCheckList(MstCheckList instance);
    partial void InsertMstCheckListRequirement(MstCheckListRequirement instance);
    partial void UpdateMstCheckListRequirement(MstCheckListRequirement instance);
    partial void DeleteMstCheckListRequirement(MstCheckListRequirement instance);
    partial void InsertMstCustomer(MstCustomer instance);
    partial void UpdateMstCustomer(MstCustomer instance);
    partial void DeleteMstCustomer(MstCustomer instance);
    partial void InsertMstHouseModel(MstHouseModel instance);
    partial void UpdateMstHouseModel(MstHouseModel instance);
    partial void DeleteMstHouseModel(MstHouseModel instance);
    partial void InsertMstProject(MstProject instance);
    partial void UpdateMstProject(MstProject instance);
    partial void DeleteMstProject(MstProject instance);
    partial void InsertMstUnit(MstUnit instance);
    partial void UpdateMstUnit(MstUnit instance);
    partial void DeleteMstUnit(MstUnit instance);
    partial void InsertMstUser(MstUser instance);
    partial void UpdateMstUser(MstUser instance);
    partial void DeleteMstUser(MstUser instance);
    partial void InsertMstUserRight(MstUserRight instance);
    partial void UpdateMstUserRight(MstUserRight instance);
    partial void DeleteMstUserRight(MstUserRight instance);
    partial void InsertSysDropDown(SysDropDown instance);
    partial void UpdateSysDropDown(SysDropDown instance);
    partial void DeleteSysDropDown(SysDropDown instance);
    partial void InsertSysPage(SysPage instance);
    partial void UpdateSysPage(SysPage instance);
    partial void DeleteSysPage(SysPage instance);
    partial void InsertSysSetting(SysSetting instance);
    partial void UpdateSysSetting(SysSetting instance);
    partial void DeleteSysSetting(SysSetting instance);
    partial void InsertTrnCommissionRequest(TrnCommissionRequest instance);
    partial void UpdateTrnCommissionRequest(TrnCommissionRequest instance);
    partial void DeleteTrnCommissionRequest(TrnCommissionRequest instance);
    partial void InsertTrnSoldUnit(TrnSoldUnit instance);
    partial void UpdateTrnSoldUnit(TrnSoldUnit instance);
    partial void DeleteTrnSoldUnit(TrnSoldUnit instance);
    partial void InsertTrnSoldUnitEquitySchedule(TrnSoldUnitEquitySchedule instance);
    partial void UpdateTrnSoldUnitEquitySchedule(TrnSoldUnitEquitySchedule instance);
    partial void DeleteTrnSoldUnitEquitySchedule(TrnSoldUnitEquitySchedule instance);
    partial void InsertTrnSoldUnitRequirement(TrnSoldUnitRequirement instance);
    partial void UpdateTrnSoldUnitRequirement(TrnSoldUnitRequirement instance);
    partial void DeleteTrnSoldUnitRequirement(TrnSoldUnitRequirement instance);
    #endregion
		
		public FilbrokerDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FilbrokerDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FilbrokerDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FilbrokerDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FilbrokerDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<TrnSoldUnitRequirementActivity> TrnSoldUnitRequirementActivities
		{
			get
			{
				return this.GetTable<TrnSoldUnitRequirementActivity>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<MstBroker> MstBrokers
		{
			get
			{
				return this.GetTable<MstBroker>();
			}
		}
		
		public System.Data.Linq.Table<MstCheckList> MstCheckLists
		{
			get
			{
				return this.GetTable<MstCheckList>();
			}
		}
		
		public System.Data.Linq.Table<MstCheckListRequirement> MstCheckListRequirements
		{
			get
			{
				return this.GetTable<MstCheckListRequirement>();
			}
		}
		
		public System.Data.Linq.Table<MstCustomer> MstCustomers
		{
			get
			{
				return this.GetTable<MstCustomer>();
			}
		}
		
		public System.Data.Linq.Table<MstHouseModel> MstHouseModels
		{
			get
			{
				return this.GetTable<MstHouseModel>();
			}
		}
		
		public System.Data.Linq.Table<MstProject> MstProjects
		{
			get
			{
				return this.GetTable<MstProject>();
			}
		}
		
		public System.Data.Linq.Table<MstUnit> MstUnits
		{
			get
			{
				return this.GetTable<MstUnit>();
			}
		}
		
		public System.Data.Linq.Table<MstUser> MstUsers
		{
			get
			{
				return this.GetTable<MstUser>();
			}
		}
		
		public System.Data.Linq.Table<MstUserRight> MstUserRights
		{
			get
			{
				return this.GetTable<MstUserRight>();
			}
		}
		
		public System.Data.Linq.Table<SysDropDown> SysDropDowns
		{
			get
			{
				return this.GetTable<SysDropDown>();
			}
		}
		
		public System.Data.Linq.Table<SysPage> SysPages
		{
			get
			{
				return this.GetTable<SysPage>();
			}
		}
		
		public System.Data.Linq.Table<SysSetting> SysSettings
		{
			get
			{
				return this.GetTable<SysSetting>();
			}
		}
		
		public System.Data.Linq.Table<TrnCommissionRequest> TrnCommissionRequests
		{
			get
			{
				return this.GetTable<TrnCommissionRequest>();
			}
		}
		
		public System.Data.Linq.Table<TrnSoldUnit> TrnSoldUnits
		{
			get
			{
				return this.GetTable<TrnSoldUnit>();
			}
		}
		
		public System.Data.Linq.Table<TrnSoldUnitEquitySchedule> TrnSoldUnitEquitySchedules
		{
			get
			{
				return this.GetTable<TrnSoldUnitEquitySchedule>();
			}
		}
		
		public System.Data.Linq.Table<TrnSoldUnitRequirement> TrnSoldUnitRequirements
		{
			get
			{
				return this.GetTable<TrnSoldUnitRequirement>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSoldUnitRequirementActivity")]
	public partial class TrnSoldUnitRequirementActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SoldUnitRequirementId;
		
		private System.DateTime _ActivityDate;
		
		private string _Activity;
		
		private string _Remarks;
		
		private int _UserId;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<TrnSoldUnitRequirement> _TrnSoldUnitRequirement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSoldUnitRequirementIdChanging(int value);
    partial void OnSoldUnitRequirementIdChanged();
    partial void OnActivityDateChanging(System.DateTime value);
    partial void OnActivityDateChanged();
    partial void OnActivityChanging(string value);
    partial void OnActivityChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public TrnSoldUnitRequirementActivity()
		{
			this._MstUser = default(EntityRef<MstUser>);
			this._TrnSoldUnitRequirement = default(EntityRef<TrnSoldUnitRequirement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldUnitRequirementId", DbType="Int NOT NULL")]
		public int SoldUnitRequirementId
		{
			get
			{
				return this._SoldUnitRequirementId;
			}
			set
			{
				if ((this._SoldUnitRequirementId != value))
				{
					if (this._TrnSoldUnitRequirement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoldUnitRequirementIdChanging(value);
					this.SendPropertyChanging();
					this._SoldUnitRequirementId = value;
					this.SendPropertyChanged("SoldUnitRequirementId");
					this.OnSoldUnitRequirementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityDate", DbType="Date NOT NULL")]
		public System.DateTime ActivityDate
		{
			get
			{
				return this._ActivityDate;
			}
			set
			{
				if ((this._ActivityDate != value))
				{
					this.OnActivityDateChanging(value);
					this.SendPropertyChanging();
					this._ActivityDate = value;
					this.SendPropertyChanged("ActivityDate");
					this.OnActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnitRequirementActivity", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnSoldUnitRequirementActivities.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnitRequirementActivities.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSoldUnitRequirement_TrnSoldUnitRequirementActivity", Storage="_TrnSoldUnitRequirement", ThisKey="SoldUnitRequirementId", OtherKey="Id", IsForeignKey=true)]
		public TrnSoldUnitRequirement TrnSoldUnitRequirement
		{
			get
			{
				return this._TrnSoldUnitRequirement.Entity;
			}
			set
			{
				TrnSoldUnitRequirement previousValue = this._TrnSoldUnitRequirement.Entity;
				if (((previousValue != value) 
							|| (this._TrnSoldUnitRequirement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSoldUnitRequirement.Entity = null;
						previousValue.TrnSoldUnitRequirementActivities.Remove(this);
					}
					this._TrnSoldUnitRequirement.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnitRequirementActivities.Add(this);
						this._SoldUnitRequirementId = value.Id;
					}
					else
					{
						this._SoldUnitRequirementId = default(int);
					}
					this.SendPropertyChanged("TrnSoldUnitRequirement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private string _User_Id;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    partial void OnUser_IdChanging(string value);
    partial void OnUser_IdChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="User_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._User_Id = value.Id;
					}
					else
					{
						this._User_Id = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _UserName;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
		private EntitySet<MstUser> _MstUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="User_Id")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="AspNetId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstBroker")]
	public partial class MstBroker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _BrokerCode;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LicenseNumber;
		
		private System.DateTime _BirthDate;
		
		private string _CivilStatus;
		
		private string _Gender;
		
		private string _Address;
		
		private string _TelephoneNumber;
		
		private string _MobileNumber;
		
		private string _Religion;
		
		private string _EmailAddress;
		
		private string _Facebook;
		
		private string _TIN;
		
		private string _RealtyFirm;
		
		private string _RealtyFirmAddress;
		
		private string _RealtyFirmTelephoneNumber;
		
		private string _RealtyFirmMobileNumber;
		
		private string _RealtyFirmFaxNumber;
		
		private string _RealtyFirmEmailAddress;
		
		private string _RealtyFirmWebsite;
		
		private string _RealtyFirmTIN;
		
		private string _Organization;
		
		private string _Remarks;
		
		private string _Picture;
		
		private string _Attachment1;
		
		private string _Attachment2;
		
		private string _Attachment3;
		
		private string _Attachment4;
		
		private string _Attachment5;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCommissionRequest> _TrnCommissionRequests;
		
		private EntitySet<TrnSoldUnit> _TrnSoldUnits;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBrokerCodeChanging(string value);
    partial void OnBrokerCodeChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLicenseNumberChanging(string value);
    partial void OnLicenseNumberChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnCivilStatusChanging(string value);
    partial void OnCivilStatusChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelephoneNumberChanging(string value);
    partial void OnTelephoneNumberChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnFacebookChanging(string value);
    partial void OnFacebookChanged();
    partial void OnTINChanging(string value);
    partial void OnTINChanged();
    partial void OnRealtyFirmChanging(string value);
    partial void OnRealtyFirmChanged();
    partial void OnRealtyFirmAddressChanging(string value);
    partial void OnRealtyFirmAddressChanged();
    partial void OnRealtyFirmTelephoneNumberChanging(string value);
    partial void OnRealtyFirmTelephoneNumberChanged();
    partial void OnRealtyFirmMobileNumberChanging(string value);
    partial void OnRealtyFirmMobileNumberChanged();
    partial void OnRealtyFirmFaxNumberChanging(string value);
    partial void OnRealtyFirmFaxNumberChanged();
    partial void OnRealtyFirmEmailAddressChanging(string value);
    partial void OnRealtyFirmEmailAddressChanged();
    partial void OnRealtyFirmWebsiteChanging(string value);
    partial void OnRealtyFirmWebsiteChanged();
    partial void OnRealtyFirmTINChanging(string value);
    partial void OnRealtyFirmTINChanged();
    partial void OnOrganizationChanging(string value);
    partial void OnOrganizationChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnAttachment1Changing(string value);
    partial void OnAttachment1Changed();
    partial void OnAttachment2Changing(string value);
    partial void OnAttachment2Changed();
    partial void OnAttachment3Changing(string value);
    partial void OnAttachment3Changed();
    partial void OnAttachment4Changing(string value);
    partial void OnAttachment4Changed();
    partial void OnAttachment5Changing(string value);
    partial void OnAttachment5Changed();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstBroker()
		{
			this._TrnCommissionRequests = new EntitySet<TrnCommissionRequest>(new Action<TrnCommissionRequest>(this.attach_TrnCommissionRequests), new Action<TrnCommissionRequest>(this.detach_TrnCommissionRequests));
			this._TrnSoldUnits = new EntitySet<TrnSoldUnit>(new Action<TrnSoldUnit>(this.attach_TrnSoldUnits), new Action<TrnSoldUnit>(this.detach_TrnSoldUnits));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BrokerCode
		{
			get
			{
				return this._BrokerCode;
			}
			set
			{
				if ((this._BrokerCode != value))
				{
					this.OnBrokerCodeChanging(value);
					this.SendPropertyChanging();
					this._BrokerCode = value;
					this.SendPropertyChanged("BrokerCode");
					this.OnBrokerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this.OnLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenseNumber = value;
					this.SendPropertyChanged("LicenseNumber");
					this.OnLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CivilStatus
		{
			get
			{
				return this._CivilStatus;
			}
			set
			{
				if ((this._CivilStatus != value))
				{
					this.OnCivilStatusChanging(value);
					this.SendPropertyChanging();
					this._CivilStatus = value;
					this.SendPropertyChanged("CivilStatus");
					this.OnCivilStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TelephoneNumber
		{
			get
			{
				return this._TelephoneNumber;
			}
			set
			{
				if ((this._TelephoneNumber != value))
				{
					this.OnTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNumber = value;
					this.SendPropertyChanged("TelephoneNumber");
					this.OnTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facebook", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Facebook
		{
			get
			{
				return this._Facebook;
			}
			set
			{
				if ((this._Facebook != value))
				{
					this.OnFacebookChanging(value);
					this.SendPropertyChanging();
					this._Facebook = value;
					this.SendPropertyChanged("Facebook");
					this.OnFacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TIN
		{
			get
			{
				return this._TIN;
			}
			set
			{
				if ((this._TIN != value))
				{
					this.OnTINChanging(value);
					this.SendPropertyChanging();
					this._TIN = value;
					this.SendPropertyChanged("TIN");
					this.OnTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealtyFirm", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RealtyFirm
		{
			get
			{
				return this._RealtyFirm;
			}
			set
			{
				if ((this._RealtyFirm != value))
				{
					this.OnRealtyFirmChanging(value);
					this.SendPropertyChanging();
					this._RealtyFirm = value;
					this.SendPropertyChanged("RealtyFirm");
					this.OnRealtyFirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealtyFirmAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RealtyFirmAddress
		{
			get
			{
				return this._RealtyFirmAddress;
			}
			set
			{
				if ((this._RealtyFirmAddress != value))
				{
					this.OnRealtyFirmAddressChanging(value);
					this.SendPropertyChanging();
					this._RealtyFirmAddress = value;
					this.SendPropertyChanged("RealtyFirmAddress");
					this.OnRealtyFirmAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealtyFirmTelephoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealtyFirmTelephoneNumber
		{
			get
			{
				return this._RealtyFirmTelephoneNumber;
			}
			set
			{
				if ((this._RealtyFirmTelephoneNumber != value))
				{
					this.OnRealtyFirmTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._RealtyFirmTelephoneNumber = value;
					this.SendPropertyChanged("RealtyFirmTelephoneNumber");
					this.OnRealtyFirmTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealtyFirmMobileNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealtyFirmMobileNumber
		{
			get
			{
				return this._RealtyFirmMobileNumber;
			}
			set
			{
				if ((this._RealtyFirmMobileNumber != value))
				{
					this.OnRealtyFirmMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._RealtyFirmMobileNumber = value;
					this.SendPropertyChanged("RealtyFirmMobileNumber");
					this.OnRealtyFirmMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealtyFirmFaxNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RealtyFirmFaxNumber
		{
			get
			{
				return this._RealtyFirmFaxNumber;
			}
			set
			{
				if ((this._RealtyFirmFaxNumber != value))
				{
					this.OnRealtyFirmFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._RealtyFirmFaxNumber = value;
					this.SendPropertyChanged("RealtyFirmFaxNumber");
					this.OnRealtyFirmFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealtyFirmEmailAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string RealtyFirmEmailAddress
		{
			get
			{
				return this._RealtyFirmEmailAddress;
			}
			set
			{
				if ((this._RealtyFirmEmailAddress != value))
				{
					this.OnRealtyFirmEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._RealtyFirmEmailAddress = value;
					this.SendPropertyChanged("RealtyFirmEmailAddress");
					this.OnRealtyFirmEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealtyFirmWebsite", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string RealtyFirmWebsite
		{
			get
			{
				return this._RealtyFirmWebsite;
			}
			set
			{
				if ((this._RealtyFirmWebsite != value))
				{
					this.OnRealtyFirmWebsiteChanging(value);
					this.SendPropertyChanging();
					this._RealtyFirmWebsite = value;
					this.SendPropertyChanged("RealtyFirmWebsite");
					this.OnRealtyFirmWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealtyFirmTIN", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string RealtyFirmTIN
		{
			get
			{
				return this._RealtyFirmTIN;
			}
			set
			{
				if ((this._RealtyFirmTIN != value))
				{
					this.OnRealtyFirmTINChanging(value);
					this.SendPropertyChanging();
					this._RealtyFirmTIN = value;
					this.SendPropertyChanged("RealtyFirmTIN");
					this.OnRealtyFirmTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Organization
		{
			get
			{
				return this._Organization;
			}
			set
			{
				if ((this._Organization != value))
				{
					this.OnOrganizationChanging(value);
					this.SendPropertyChanging();
					this._Organization = value;
					this.SendPropertyChanged("Organization");
					this.OnOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(255)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment1", DbType="NVarChar(255)")]
		public string Attachment1
		{
			get
			{
				return this._Attachment1;
			}
			set
			{
				if ((this._Attachment1 != value))
				{
					this.OnAttachment1Changing(value);
					this.SendPropertyChanging();
					this._Attachment1 = value;
					this.SendPropertyChanged("Attachment1");
					this.OnAttachment1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment2", DbType="NVarChar(255)")]
		public string Attachment2
		{
			get
			{
				return this._Attachment2;
			}
			set
			{
				if ((this._Attachment2 != value))
				{
					this.OnAttachment2Changing(value);
					this.SendPropertyChanging();
					this._Attachment2 = value;
					this.SendPropertyChanged("Attachment2");
					this.OnAttachment2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment3", DbType="NVarChar(255)")]
		public string Attachment3
		{
			get
			{
				return this._Attachment3;
			}
			set
			{
				if ((this._Attachment3 != value))
				{
					this.OnAttachment3Changing(value);
					this.SendPropertyChanging();
					this._Attachment3 = value;
					this.SendPropertyChanged("Attachment3");
					this.OnAttachment3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment4", DbType="NVarChar(255)")]
		public string Attachment4
		{
			get
			{
				return this._Attachment4;
			}
			set
			{
				if ((this._Attachment4 != value))
				{
					this.OnAttachment4Changing(value);
					this.SendPropertyChanging();
					this._Attachment4 = value;
					this.SendPropertyChanged("Attachment4");
					this.OnAttachment4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment5", DbType="NVarChar(255)")]
		public string Attachment5
		{
			get
			{
				return this._Attachment5;
			}
			set
			{
				if ((this._Attachment5 != value))
				{
					this.OnAttachment5Changing(value);
					this.SendPropertyChanging();
					this._Attachment5 = value;
					this.SendPropertyChanged("Attachment5");
					this.OnAttachment5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBroker_TrnCommissionRequest", Storage="_TrnCommissionRequests", ThisKey="Id", OtherKey="BrokerId")]
		public EntitySet<TrnCommissionRequest> TrnCommissionRequests
		{
			get
			{
				return this._TrnCommissionRequests;
			}
			set
			{
				this._TrnCommissionRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBroker_TrnSoldUnit", Storage="_TrnSoldUnits", ThisKey="Id", OtherKey="BrokerId")]
		public EntitySet<TrnSoldUnit> TrnSoldUnits
		{
			get
			{
				return this._TrnSoldUnits;
			}
			set
			{
				this._TrnSoldUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBroker", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstBrokers.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstBrokers.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBroker1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstBrokers1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstBrokers1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCommissionRequests(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstBroker = this;
		}
		
		private void detach_TrnCommissionRequests(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstBroker = null;
		}
		
		private void attach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstBroker = this;
		}
		
		private void detach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstBroker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCheckList")]
	public partial class MstCheckList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CheckListCode;
		
		private string _CheckList;
		
		private System.DateTime _CheckListDate;
		
		private int _ProjectId;
		
		private string _Remarks;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstCheckListRequirement> _MstCheckListRequirements;
		
		private EntitySet<TrnSoldUnit> _TrnSoldUnits;
		
		private EntityRef<MstProject> _MstProject;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCheckListCodeChanging(string value);
    partial void OnCheckListCodeChanged();
    partial void OnCheckListChanging(string value);
    partial void OnCheckListChanged();
    partial void OnCheckListDateChanging(System.DateTime value);
    partial void OnCheckListDateChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstCheckList()
		{
			this._MstCheckListRequirements = new EntitySet<MstCheckListRequirement>(new Action<MstCheckListRequirement>(this.attach_MstCheckListRequirements), new Action<MstCheckListRequirement>(this.detach_MstCheckListRequirements));
			this._TrnSoldUnits = new EntitySet<TrnSoldUnit>(new Action<TrnSoldUnit>(this.attach_TrnSoldUnits), new Action<TrnSoldUnit>(this.detach_TrnSoldUnits));
			this._MstProject = default(EntityRef<MstProject>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckListCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CheckListCode
		{
			get
			{
				return this._CheckListCode;
			}
			set
			{
				if ((this._CheckListCode != value))
				{
					this.OnCheckListCodeChanging(value);
					this.SendPropertyChanging();
					this._CheckListCode = value;
					this.SendPropertyChanged("CheckListCode");
					this.OnCheckListCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckList", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CheckList
		{
			get
			{
				return this._CheckList;
			}
			set
			{
				if ((this._CheckList != value))
				{
					this.OnCheckListChanging(value);
					this.SendPropertyChanging();
					this._CheckList = value;
					this.SendPropertyChanged("CheckList");
					this.OnCheckListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckListDate", DbType="Date NOT NULL")]
		public System.DateTime CheckListDate
		{
			get
			{
				return this._CheckListDate;
			}
			set
			{
				if ((this._CheckListDate != value))
				{
					this.OnCheckListDateChanging(value);
					this.SendPropertyChanging();
					this._CheckListDate = value;
					this.SendPropertyChanged("CheckListDate");
					this.OnCheckListDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._MstProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCheckList_MstCheckListRequirement", Storage="_MstCheckListRequirements", ThisKey="Id", OtherKey="CheckListId")]
		public EntitySet<MstCheckListRequirement> MstCheckListRequirements
		{
			get
			{
				return this._MstCheckListRequirements;
			}
			set
			{
				this._MstCheckListRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCheckList_TrnSoldUnit", Storage="_TrnSoldUnits", ThisKey="Id", OtherKey="CheckListId")]
		public EntitySet<TrnSoldUnit> TrnSoldUnits
		{
			get
			{
				return this._TrnSoldUnits;
			}
			set
			{
				this._TrnSoldUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProject_MstCheckList", Storage="_MstProject", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true)]
		public MstProject MstProject
		{
			get
			{
				return this._MstProject.Entity;
			}
			set
			{
				MstProject previousValue = this._MstProject.Entity;
				if (((previousValue != value) 
							|| (this._MstProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstProject.Entity = null;
						previousValue.MstCheckLists.Remove(this);
					}
					this._MstProject.Entity = value;
					if ((value != null))
					{
						value.MstCheckLists.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("MstProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCheckList", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstCheckLists.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstCheckLists.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCheckList1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstCheckLists1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstCheckLists1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstCheckListRequirements(MstCheckListRequirement entity)
		{
			this.SendPropertyChanging();
			entity.MstCheckList = this;
		}
		
		private void detach_MstCheckListRequirements(MstCheckListRequirement entity)
		{
			this.SendPropertyChanging();
			entity.MstCheckList = null;
		}
		
		private void attach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstCheckList = this;
		}
		
		private void detach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstCheckList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCheckListRequirement")]
	public partial class MstCheckListRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CheckListId;
		
		private int _RequirementNo;
		
		private string _Requirement;
		
		private string _Category;
		
		private string _Type;
		
		private bool _WithAttachments;
		
		private EntitySet<TrnSoldUnitRequirement> _TrnSoldUnitRequirements;
		
		private EntityRef<MstCheckList> _MstCheckList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCheckListIdChanging(int value);
    partial void OnCheckListIdChanged();
    partial void OnRequirementNoChanging(int value);
    partial void OnRequirementNoChanged();
    partial void OnRequirementChanging(string value);
    partial void OnRequirementChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnWithAttachmentsChanging(bool value);
    partial void OnWithAttachmentsChanged();
    #endregion
		
		public MstCheckListRequirement()
		{
			this._TrnSoldUnitRequirements = new EntitySet<TrnSoldUnitRequirement>(new Action<TrnSoldUnitRequirement>(this.attach_TrnSoldUnitRequirements), new Action<TrnSoldUnitRequirement>(this.detach_TrnSoldUnitRequirements));
			this._MstCheckList = default(EntityRef<MstCheckList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckListId", DbType="Int NOT NULL")]
		public int CheckListId
		{
			get
			{
				return this._CheckListId;
			}
			set
			{
				if ((this._CheckListId != value))
				{
					if (this._MstCheckList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckListIdChanging(value);
					this.SendPropertyChanging();
					this._CheckListId = value;
					this.SendPropertyChanged("CheckListId");
					this.OnCheckListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequirementNo", DbType="Int NOT NULL")]
		public int RequirementNo
		{
			get
			{
				return this._RequirementNo;
			}
			set
			{
				if ((this._RequirementNo != value))
				{
					this.OnRequirementNoChanging(value);
					this.SendPropertyChanging();
					this._RequirementNo = value;
					this.SendPropertyChanged("RequirementNo");
					this.OnRequirementNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requirement", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Requirement
		{
			get
			{
				return this._Requirement;
			}
			set
			{
				if ((this._Requirement != value))
				{
					this.OnRequirementChanging(value);
					this.SendPropertyChanging();
					this._Requirement = value;
					this.SendPropertyChanged("Requirement");
					this.OnRequirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithAttachments", DbType="Bit NOT NULL")]
		public bool WithAttachments
		{
			get
			{
				return this._WithAttachments;
			}
			set
			{
				if ((this._WithAttachments != value))
				{
					this.OnWithAttachmentsChanging(value);
					this.SendPropertyChanging();
					this._WithAttachments = value;
					this.SendPropertyChanged("WithAttachments");
					this.OnWithAttachmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCheckListRequirement_TrnSoldUnitRequirement", Storage="_TrnSoldUnitRequirements", ThisKey="Id", OtherKey="CheckListRequirementId")]
		public EntitySet<TrnSoldUnitRequirement> TrnSoldUnitRequirements
		{
			get
			{
				return this._TrnSoldUnitRequirements;
			}
			set
			{
				this._TrnSoldUnitRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCheckList_MstCheckListRequirement", Storage="_MstCheckList", ThisKey="CheckListId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstCheckList MstCheckList
		{
			get
			{
				return this._MstCheckList.Entity;
			}
			set
			{
				MstCheckList previousValue = this._MstCheckList.Entity;
				if (((previousValue != value) 
							|| (this._MstCheckList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCheckList.Entity = null;
						previousValue.MstCheckListRequirements.Remove(this);
					}
					this._MstCheckList.Entity = value;
					if ((value != null))
					{
						value.MstCheckListRequirements.Add(this);
						this._CheckListId = value.Id;
					}
					else
					{
						this._CheckListId = default(int);
					}
					this.SendPropertyChanged("MstCheckList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSoldUnitRequirements(TrnSoldUnitRequirement entity)
		{
			this.SendPropertyChanging();
			entity.MstCheckListRequirement = this;
		}
		
		private void detach_TrnSoldUnitRequirements(TrnSoldUnitRequirement entity)
		{
			this.SendPropertyChanging();
			entity.MstCheckListRequirement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCustomer")]
	public partial class MstCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CustomerCode;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _CivilStatus;
		
		private string _Gender;
		
		private System.DateTime _BirthDate;
		
		private string _TIN;
		
		private string _IdType;
		
		private string _IdNumber;
		
		private string _Address;
		
		private string _City;
		
		private string _Province;
		
		private string _Country;
		
		private string _ZipCode;
		
		private string _EmailAddress;
		
		private string _TelephoneNumber;
		
		private string _MobileNumber;
		
		private string _Employer;
		
		private string _EmployerIndustry;
		
		private int _NoOfYearsEmployed;
		
		private string _Position;
		
		private string _EmploymentStatus;
		
		private string _EmployerAddress;
		
		private string _EmployerCity;
		
		private string _EmployerProvince;
		
		private string _EmployerCountry;
		
		private string _EmployerZipCode;
		
		private string _EmployerTelephoneNumber;
		
		private string _EmployerMobileNumber;
		
		private string _Remarks;
		
		private string _Status;
		
		private string _Picture;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnSoldUnit> _TrnSoldUnits;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnCivilStatusChanging(string value);
    partial void OnCivilStatusChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnTINChanging(string value);
    partial void OnTINChanged();
    partial void OnIdTypeChanging(string value);
    partial void OnIdTypeChanged();
    partial void OnIdNumberChanging(string value);
    partial void OnIdNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnTelephoneNumberChanging(string value);
    partial void OnTelephoneNumberChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnEmployerChanging(string value);
    partial void OnEmployerChanged();
    partial void OnEmployerIndustryChanging(string value);
    partial void OnEmployerIndustryChanged();
    partial void OnNoOfYearsEmployedChanging(int value);
    partial void OnNoOfYearsEmployedChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnEmploymentStatusChanging(string value);
    partial void OnEmploymentStatusChanged();
    partial void OnEmployerAddressChanging(string value);
    partial void OnEmployerAddressChanged();
    partial void OnEmployerCityChanging(string value);
    partial void OnEmployerCityChanged();
    partial void OnEmployerProvinceChanging(string value);
    partial void OnEmployerProvinceChanged();
    partial void OnEmployerCountryChanging(string value);
    partial void OnEmployerCountryChanged();
    partial void OnEmployerZipCodeChanging(string value);
    partial void OnEmployerZipCodeChanged();
    partial void OnEmployerTelephoneNumberChanging(string value);
    partial void OnEmployerTelephoneNumberChanged();
    partial void OnEmployerMobileNumberChanging(string value);
    partial void OnEmployerMobileNumberChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstCustomer()
		{
			this._TrnSoldUnits = new EntitySet<TrnSoldUnit>(new Action<TrnSoldUnit>(this.attach_TrnSoldUnits), new Action<TrnSoldUnit>(this.detach_TrnSoldUnits));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CivilStatus
		{
			get
			{
				return this._CivilStatus;
			}
			set
			{
				if ((this._CivilStatus != value))
				{
					this.OnCivilStatusChanging(value);
					this.SendPropertyChanging();
					this._CivilStatus = value;
					this.SendPropertyChanged("CivilStatus");
					this.OnCivilStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TIN
		{
			get
			{
				return this._TIN;
			}
			set
			{
				if ((this._TIN != value))
				{
					this.OnTINChanging(value);
					this.SendPropertyChanging();
					this._TIN = value;
					this.SendPropertyChanged("TIN");
					this.OnTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IdType
		{
			get
			{
				return this._IdType;
			}
			set
			{
				if ((this._IdType != value))
				{
					this.OnIdTypeChanging(value);
					this.SendPropertyChanging();
					this._IdType = value;
					this.SendPropertyChanged("IdType");
					this.OnIdTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IdNumber
		{
			get
			{
				return this._IdNumber;
			}
			set
			{
				if ((this._IdNumber != value))
				{
					this.OnIdNumberChanging(value);
					this.SendPropertyChanging();
					this._IdNumber = value;
					this.SendPropertyChanged("IdNumber");
					this.OnIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TelephoneNumber
		{
			get
			{
				return this._TelephoneNumber;
			}
			set
			{
				if ((this._TelephoneNumber != value))
				{
					this.OnTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNumber = value;
					this.SendPropertyChanged("TelephoneNumber");
					this.OnTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employer", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Employer
		{
			get
			{
				return this._Employer;
			}
			set
			{
				if ((this._Employer != value))
				{
					this.OnEmployerChanging(value);
					this.SendPropertyChanging();
					this._Employer = value;
					this.SendPropertyChanged("Employer");
					this.OnEmployerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerIndustry", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployerIndustry
		{
			get
			{
				return this._EmployerIndustry;
			}
			set
			{
				if ((this._EmployerIndustry != value))
				{
					this.OnEmployerIndustryChanging(value);
					this.SendPropertyChanging();
					this._EmployerIndustry = value;
					this.SendPropertyChanged("EmployerIndustry");
					this.OnEmployerIndustryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfYearsEmployed", DbType="Int NOT NULL")]
		public int NoOfYearsEmployed
		{
			get
			{
				return this._NoOfYearsEmployed;
			}
			set
			{
				if ((this._NoOfYearsEmployed != value))
				{
					this.OnNoOfYearsEmployedChanging(value);
					this.SendPropertyChanging();
					this._NoOfYearsEmployed = value;
					this.SendPropertyChanged("NoOfYearsEmployed");
					this.OnNoOfYearsEmployedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmploymentStatus
		{
			get
			{
				return this._EmploymentStatus;
			}
			set
			{
				if ((this._EmploymentStatus != value))
				{
					this.OnEmploymentStatusChanging(value);
					this.SendPropertyChanging();
					this._EmploymentStatus = value;
					this.SendPropertyChanged("EmploymentStatus");
					this.OnEmploymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployerAddress
		{
			get
			{
				return this._EmployerAddress;
			}
			set
			{
				if ((this._EmployerAddress != value))
				{
					this.OnEmployerAddressChanging(value);
					this.SendPropertyChanging();
					this._EmployerAddress = value;
					this.SendPropertyChanged("EmployerAddress");
					this.OnEmployerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerCity", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployerCity
		{
			get
			{
				return this._EmployerCity;
			}
			set
			{
				if ((this._EmployerCity != value))
				{
					this.OnEmployerCityChanging(value);
					this.SendPropertyChanging();
					this._EmployerCity = value;
					this.SendPropertyChanged("EmployerCity");
					this.OnEmployerCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerProvince", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployerProvince
		{
			get
			{
				return this._EmployerProvince;
			}
			set
			{
				if ((this._EmployerProvince != value))
				{
					this.OnEmployerProvinceChanging(value);
					this.SendPropertyChanging();
					this._EmployerProvince = value;
					this.SendPropertyChanged("EmployerProvince");
					this.OnEmployerProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerCountry", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployerCountry
		{
			get
			{
				return this._EmployerCountry;
			}
			set
			{
				if ((this._EmployerCountry != value))
				{
					this.OnEmployerCountryChanging(value);
					this.SendPropertyChanging();
					this._EmployerCountry = value;
					this.SendPropertyChanged("EmployerCountry");
					this.OnEmployerCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerZipCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployerZipCode
		{
			get
			{
				return this._EmployerZipCode;
			}
			set
			{
				if ((this._EmployerZipCode != value))
				{
					this.OnEmployerZipCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployerZipCode = value;
					this.SendPropertyChanged("EmployerZipCode");
					this.OnEmployerZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerTelephoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployerTelephoneNumber
		{
			get
			{
				return this._EmployerTelephoneNumber;
			}
			set
			{
				if ((this._EmployerTelephoneNumber != value))
				{
					this.OnEmployerTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployerTelephoneNumber = value;
					this.SendPropertyChanged("EmployerTelephoneNumber");
					this.OnEmployerTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerMobileNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployerMobileNumber
		{
			get
			{
				return this._EmployerMobileNumber;
			}
			set
			{
				if ((this._EmployerMobileNumber != value))
				{
					this.OnEmployerMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployerMobileNumber = value;
					this.SendPropertyChanged("EmployerMobileNumber");
					this.OnEmployerMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(255)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCustomer_TrnSoldUnit", Storage="_TrnSoldUnits", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnSoldUnit> TrnSoldUnits
		{
			get
			{
				return this._TrnSoldUnits;
			}
			set
			{
				this._TrnSoldUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstCustomers.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstCustomers.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstCustomers1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstCustomers1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstCustomer = this;
		}
		
		private void detach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstHouseModel")]
	public partial class MstHouseModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _HouseModelCode;
		
		private string _HouseModel;
		
		private int _ProjectId;
		
		private decimal _TFA;
		
		private decimal _Price;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstUnit> _MstUnits;
		
		private EntityRef<MstProject> _MstProject;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHouseModelCodeChanging(string value);
    partial void OnHouseModelCodeChanged();
    partial void OnHouseModelChanging(string value);
    partial void OnHouseModelChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnTFAChanging(decimal value);
    partial void OnTFAChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstHouseModel()
		{
			this._MstUnits = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits), new Action<MstUnit>(this.detach_MstUnits));
			this._MstProject = default(EntityRef<MstProject>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseModelCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HouseModelCode
		{
			get
			{
				return this._HouseModelCode;
			}
			set
			{
				if ((this._HouseModelCode != value))
				{
					this.OnHouseModelCodeChanging(value);
					this.SendPropertyChanging();
					this._HouseModelCode = value;
					this.SendPropertyChanged("HouseModelCode");
					this.OnHouseModelCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseModel", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HouseModel
		{
			get
			{
				return this._HouseModel;
			}
			set
			{
				if ((this._HouseModel != value))
				{
					this.OnHouseModelChanging(value);
					this.SendPropertyChanging();
					this._HouseModel = value;
					this.SendPropertyChanged("HouseModel");
					this.OnHouseModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._MstProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFA", DbType="Decimal(18,5) NOT NULL")]
		public decimal TFA
		{
			get
			{
				return this._TFA;
			}
			set
			{
				if ((this._TFA != value))
				{
					this.OnTFAChanging(value);
					this.SendPropertyChanging();
					this._TFA = value;
					this.SendPropertyChanged("TFA");
					this.OnTFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstHouseModel_MstUnit", Storage="_MstUnits", ThisKey="Id", OtherKey="HouseModelId")]
		public EntitySet<MstUnit> MstUnits
		{
			get
			{
				return this._MstUnits;
			}
			set
			{
				this._MstUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProject_MstHouseModel", Storage="_MstProject", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstProject MstProject
		{
			get
			{
				return this._MstProject.Entity;
			}
			set
			{
				MstProject previousValue = this._MstProject.Entity;
				if (((previousValue != value) 
							|| (this._MstProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstProject.Entity = null;
						previousValue.MstHouseModels.Remove(this);
					}
					this._MstProject.Entity = value;
					if ((value != null))
					{
						value.MstHouseModels.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("MstProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstHouseModel", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstHouseModels.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstHouseModels.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstHouseModel1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstHouseModels1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstHouseModels1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstHouseModel = this;
		}
		
		private void detach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstHouseModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstProject")]
	public partial class MstProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ProjectCode;
		
		private string _Project;
		
		private string _Address;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstCheckList> _MstCheckLists;
		
		private EntitySet<MstHouseModel> _MstHouseModels;
		
		private EntitySet<MstUnit> _MstUnits;
		
		private EntitySet<TrnSoldUnit> _TrnSoldUnits;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProjectCodeChanging(string value);
    partial void OnProjectCodeChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstProject()
		{
			this._MstCheckLists = new EntitySet<MstCheckList>(new Action<MstCheckList>(this.attach_MstCheckLists), new Action<MstCheckList>(this.detach_MstCheckLists));
			this._MstHouseModels = new EntitySet<MstHouseModel>(new Action<MstHouseModel>(this.attach_MstHouseModels), new Action<MstHouseModel>(this.detach_MstHouseModels));
			this._MstUnits = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits), new Action<MstUnit>(this.detach_MstUnits));
			this._TrnSoldUnits = new EntitySet<TrnSoldUnit>(new Action<TrnSoldUnit>(this.attach_TrnSoldUnits), new Action<TrnSoldUnit>(this.detach_TrnSoldUnits));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this.OnProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCode = value;
					this.SendPropertyChanged("ProjectCode");
					this.OnProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProject_MstCheckList", Storage="_MstCheckLists", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<MstCheckList> MstCheckLists
		{
			get
			{
				return this._MstCheckLists;
			}
			set
			{
				this._MstCheckLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProject_MstHouseModel", Storage="_MstHouseModels", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<MstHouseModel> MstHouseModels
		{
			get
			{
				return this._MstHouseModels;
			}
			set
			{
				this._MstHouseModels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProject_MstUnit", Storage="_MstUnits", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<MstUnit> MstUnits
		{
			get
			{
				return this._MstUnits;
			}
			set
			{
				this._MstUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProject_TrnSoldUnit", Storage="_TrnSoldUnits", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<TrnSoldUnit> TrnSoldUnits
		{
			get
			{
				return this._TrnSoldUnits;
			}
			set
			{
				this._TrnSoldUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstProject", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstProjects.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstProjects.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstProject1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstProjects1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstProjects1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstCheckLists(MstCheckList entity)
		{
			this.SendPropertyChanging();
			entity.MstProject = this;
		}
		
		private void detach_MstCheckLists(MstCheckList entity)
		{
			this.SendPropertyChanging();
			entity.MstProject = null;
		}
		
		private void attach_MstHouseModels(MstHouseModel entity)
		{
			this.SendPropertyChanging();
			entity.MstProject = this;
		}
		
		private void detach_MstHouseModels(MstHouseModel entity)
		{
			this.SendPropertyChanging();
			entity.MstProject = null;
		}
		
		private void attach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstProject = this;
		}
		
		private void detach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstProject = null;
		}
		
		private void attach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstProject = this;
		}
		
		private void detach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstProject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUnit")]
	public partial class MstUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UnitCode;
		
		private string _Block;
		
		private string _Lot;
		
		private int _ProjectId;
		
		private int _HouseModelId;
		
		private decimal _TLA;
		
		private decimal _TFA;
		
		private decimal _Price;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnSoldUnit> _TrnSoldUnits;
		
		private EntityRef<MstHouseModel> _MstHouseModel;
		
		private EntityRef<MstProject> _MstProject;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitCodeChanging(string value);
    partial void OnUnitCodeChanged();
    partial void OnBlockChanging(string value);
    partial void OnBlockChanged();
    partial void OnLotChanging(string value);
    partial void OnLotChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnHouseModelIdChanging(int value);
    partial void OnHouseModelIdChanged();
    partial void OnTLAChanging(decimal value);
    partial void OnTLAChanged();
    partial void OnTFAChanging(decimal value);
    partial void OnTFAChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstUnit()
		{
			this._TrnSoldUnits = new EntitySet<TrnSoldUnit>(new Action<TrnSoldUnit>(this.attach_TrnSoldUnits), new Action<TrnSoldUnit>(this.detach_TrnSoldUnits));
			this._MstHouseModel = default(EntityRef<MstHouseModel>);
			this._MstProject = default(EntityRef<MstProject>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this.OnUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitCode = value;
					this.SendPropertyChanged("UnitCode");
					this.OnUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Block", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Block
		{
			get
			{
				return this._Block;
			}
			set
			{
				if ((this._Block != value))
				{
					this.OnBlockChanging(value);
					this.SendPropertyChanging();
					this._Block = value;
					this.SendPropertyChanged("Block");
					this.OnBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lot", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Lot
		{
			get
			{
				return this._Lot;
			}
			set
			{
				if ((this._Lot != value))
				{
					this.OnLotChanging(value);
					this.SendPropertyChanging();
					this._Lot = value;
					this.SendPropertyChanged("Lot");
					this.OnLotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._MstProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseModelId", DbType="Int NOT NULL")]
		public int HouseModelId
		{
			get
			{
				return this._HouseModelId;
			}
			set
			{
				if ((this._HouseModelId != value))
				{
					if (this._MstHouseModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHouseModelIdChanging(value);
					this.SendPropertyChanging();
					this._HouseModelId = value;
					this.SendPropertyChanged("HouseModelId");
					this.OnHouseModelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLA", DbType="Decimal(18,5) NOT NULL")]
		public decimal TLA
		{
			get
			{
				return this._TLA;
			}
			set
			{
				if ((this._TLA != value))
				{
					this.OnTLAChanging(value);
					this.SendPropertyChanging();
					this._TLA = value;
					this.SendPropertyChanged("TLA");
					this.OnTLAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFA", DbType="Decimal(18,5) NOT NULL")]
		public decimal TFA
		{
			get
			{
				return this._TFA;
			}
			set
			{
				if ((this._TFA != value))
				{
					this.OnTFAChanging(value);
					this.SendPropertyChanging();
					this._TFA = value;
					this.SendPropertyChanged("TFA");
					this.OnTFAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSoldUnit", Storage="_TrnSoldUnits", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnSoldUnit> TrnSoldUnits
		{
			get
			{
				return this._TrnSoldUnits;
			}
			set
			{
				this._TrnSoldUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstHouseModel_MstUnit", Storage="_MstHouseModel", ThisKey="HouseModelId", OtherKey="Id", IsForeignKey=true)]
		public MstHouseModel MstHouseModel
		{
			get
			{
				return this._MstHouseModel.Entity;
			}
			set
			{
				MstHouseModel previousValue = this._MstHouseModel.Entity;
				if (((previousValue != value) 
							|| (this._MstHouseModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstHouseModel.Entity = null;
						previousValue.MstUnits.Remove(this);
					}
					this._MstHouseModel.Entity = value;
					if ((value != null))
					{
						value.MstUnits.Add(this);
						this._HouseModelId = value.Id;
					}
					else
					{
						this._HouseModelId = default(int);
					}
					this.SendPropertyChanged("MstHouseModel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProject_MstUnit", Storage="_MstProject", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstProject MstProject
		{
			get
			{
				return this._MstProject.Entity;
			}
			set
			{
				MstProject previousValue = this._MstProject.Entity;
				if (((previousValue != value) 
							|| (this._MstProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstProject.Entity = null;
						previousValue.MstUnits.Remove(this);
					}
					this._MstProject.Entity = value;
					if ((value != null))
					{
						value.MstUnits.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("MstProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit", Storage="_MstUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUnits.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUnits.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit1", Storage="_MstUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstUnits1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstUnits1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUser")]
	public partial class MstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _FullName;
		
		private string _Password;
		
		private string _Status;
		
		private string _AspNetId;
		
		private EntitySet<TrnSoldUnitRequirementActivity> _TrnSoldUnitRequirementActivities;
		
		private EntitySet<MstBroker> _MstBrokers;
		
		private EntitySet<MstBroker> _MstBrokers1;
		
		private EntitySet<MstCheckList> _MstCheckLists;
		
		private EntitySet<MstCheckList> _MstCheckLists1;
		
		private EntitySet<MstCustomer> _MstCustomers;
		
		private EntitySet<MstCustomer> _MstCustomers1;
		
		private EntitySet<MstHouseModel> _MstHouseModels;
		
		private EntitySet<MstHouseModel> _MstHouseModels1;
		
		private EntitySet<MstProject> _MstProjects;
		
		private EntitySet<MstProject> _MstProjects1;
		
		private EntitySet<MstUnit> _MstUnits;
		
		private EntitySet<MstUnit> _MstUnits1;
		
		private EntitySet<MstUserRight> _MstUserRights;
		
		private EntitySet<TrnCommissionRequest> _TrnCommissionRequests;
		
		private EntitySet<TrnCommissionRequest> _TrnCommissionRequests1;
		
		private EntitySet<TrnCommissionRequest> _TrnCommissionRequests2;
		
		private EntitySet<TrnCommissionRequest> _TrnCommissionRequests3;
		
		private EntitySet<TrnCommissionRequest> _TrnCommissionRequests4;
		
		private EntitySet<TrnSoldUnit> _TrnSoldUnits;
		
		private EntitySet<TrnSoldUnit> _TrnSoldUnits1;
		
		private EntitySet<TrnSoldUnit> _TrnSoldUnits2;
		
		private EntitySet<TrnSoldUnit> _TrnSoldUnits3;
		
		private EntitySet<TrnSoldUnit> _TrnSoldUnits4;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnAspNetIdChanging(string value);
    partial void OnAspNetIdChanged();
    #endregion
		
		public MstUser()
		{
			this._TrnSoldUnitRequirementActivities = new EntitySet<TrnSoldUnitRequirementActivity>(new Action<TrnSoldUnitRequirementActivity>(this.attach_TrnSoldUnitRequirementActivities), new Action<TrnSoldUnitRequirementActivity>(this.detach_TrnSoldUnitRequirementActivities));
			this._MstBrokers = new EntitySet<MstBroker>(new Action<MstBroker>(this.attach_MstBrokers), new Action<MstBroker>(this.detach_MstBrokers));
			this._MstBrokers1 = new EntitySet<MstBroker>(new Action<MstBroker>(this.attach_MstBrokers1), new Action<MstBroker>(this.detach_MstBrokers1));
			this._MstCheckLists = new EntitySet<MstCheckList>(new Action<MstCheckList>(this.attach_MstCheckLists), new Action<MstCheckList>(this.detach_MstCheckLists));
			this._MstCheckLists1 = new EntitySet<MstCheckList>(new Action<MstCheckList>(this.attach_MstCheckLists1), new Action<MstCheckList>(this.detach_MstCheckLists1));
			this._MstCustomers = new EntitySet<MstCustomer>(new Action<MstCustomer>(this.attach_MstCustomers), new Action<MstCustomer>(this.detach_MstCustomers));
			this._MstCustomers1 = new EntitySet<MstCustomer>(new Action<MstCustomer>(this.attach_MstCustomers1), new Action<MstCustomer>(this.detach_MstCustomers1));
			this._MstHouseModels = new EntitySet<MstHouseModel>(new Action<MstHouseModel>(this.attach_MstHouseModels), new Action<MstHouseModel>(this.detach_MstHouseModels));
			this._MstHouseModels1 = new EntitySet<MstHouseModel>(new Action<MstHouseModel>(this.attach_MstHouseModels1), new Action<MstHouseModel>(this.detach_MstHouseModels1));
			this._MstProjects = new EntitySet<MstProject>(new Action<MstProject>(this.attach_MstProjects), new Action<MstProject>(this.detach_MstProjects));
			this._MstProjects1 = new EntitySet<MstProject>(new Action<MstProject>(this.attach_MstProjects1), new Action<MstProject>(this.detach_MstProjects1));
			this._MstUnits = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits), new Action<MstUnit>(this.detach_MstUnits));
			this._MstUnits1 = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits1), new Action<MstUnit>(this.detach_MstUnits1));
			this._MstUserRights = new EntitySet<MstUserRight>(new Action<MstUserRight>(this.attach_MstUserRights), new Action<MstUserRight>(this.detach_MstUserRights));
			this._TrnCommissionRequests = new EntitySet<TrnCommissionRequest>(new Action<TrnCommissionRequest>(this.attach_TrnCommissionRequests), new Action<TrnCommissionRequest>(this.detach_TrnCommissionRequests));
			this._TrnCommissionRequests1 = new EntitySet<TrnCommissionRequest>(new Action<TrnCommissionRequest>(this.attach_TrnCommissionRequests1), new Action<TrnCommissionRequest>(this.detach_TrnCommissionRequests1));
			this._TrnCommissionRequests2 = new EntitySet<TrnCommissionRequest>(new Action<TrnCommissionRequest>(this.attach_TrnCommissionRequests2), new Action<TrnCommissionRequest>(this.detach_TrnCommissionRequests2));
			this._TrnCommissionRequests3 = new EntitySet<TrnCommissionRequest>(new Action<TrnCommissionRequest>(this.attach_TrnCommissionRequests3), new Action<TrnCommissionRequest>(this.detach_TrnCommissionRequests3));
			this._TrnCommissionRequests4 = new EntitySet<TrnCommissionRequest>(new Action<TrnCommissionRequest>(this.attach_TrnCommissionRequests4), new Action<TrnCommissionRequest>(this.detach_TrnCommissionRequests4));
			this._TrnSoldUnits = new EntitySet<TrnSoldUnit>(new Action<TrnSoldUnit>(this.attach_TrnSoldUnits), new Action<TrnSoldUnit>(this.detach_TrnSoldUnits));
			this._TrnSoldUnits1 = new EntitySet<TrnSoldUnit>(new Action<TrnSoldUnit>(this.attach_TrnSoldUnits1), new Action<TrnSoldUnit>(this.detach_TrnSoldUnits1));
			this._TrnSoldUnits2 = new EntitySet<TrnSoldUnit>(new Action<TrnSoldUnit>(this.attach_TrnSoldUnits2), new Action<TrnSoldUnit>(this.detach_TrnSoldUnits2));
			this._TrnSoldUnits3 = new EntitySet<TrnSoldUnit>(new Action<TrnSoldUnit>(this.attach_TrnSoldUnits3), new Action<TrnSoldUnit>(this.detach_TrnSoldUnits3));
			this._TrnSoldUnits4 = new EntitySet<TrnSoldUnit>(new Action<TrnSoldUnit>(this.attach_TrnSoldUnits4), new Action<TrnSoldUnit>(this.detach_TrnSoldUnits4));
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetId", DbType="NVarChar(128)")]
		public string AspNetId
		{
			get
			{
				return this._AspNetId;
			}
			set
			{
				if ((this._AspNetId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAspNetIdChanging(value);
					this.SendPropertyChanging();
					this._AspNetId = value;
					this.SendPropertyChanged("AspNetId");
					this.OnAspNetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnitRequirementActivity", Storage="_TrnSoldUnitRequirementActivities", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TrnSoldUnitRequirementActivity> TrnSoldUnitRequirementActivities
		{
			get
			{
				return this._TrnSoldUnitRequirementActivities;
			}
			set
			{
				this._TrnSoldUnitRequirementActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBroker", Storage="_MstBrokers", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstBroker> MstBrokers
		{
			get
			{
				return this._MstBrokers;
			}
			set
			{
				this._MstBrokers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBroker1", Storage="_MstBrokers1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstBroker> MstBrokers1
		{
			get
			{
				return this._MstBrokers1;
			}
			set
			{
				this._MstBrokers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCheckList", Storage="_MstCheckLists", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstCheckList> MstCheckLists
		{
			get
			{
				return this._MstCheckLists;
			}
			set
			{
				this._MstCheckLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCheckList1", Storage="_MstCheckLists1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstCheckList> MstCheckLists1
		{
			get
			{
				return this._MstCheckLists1;
			}
			set
			{
				this._MstCheckLists1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer", Storage="_MstCustomers", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstCustomer> MstCustomers
		{
			get
			{
				return this._MstCustomers;
			}
			set
			{
				this._MstCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer1", Storage="_MstCustomers1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstCustomer> MstCustomers1
		{
			get
			{
				return this._MstCustomers1;
			}
			set
			{
				this._MstCustomers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstHouseModel", Storage="_MstHouseModels", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstHouseModel> MstHouseModels
		{
			get
			{
				return this._MstHouseModels;
			}
			set
			{
				this._MstHouseModels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstHouseModel1", Storage="_MstHouseModels1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstHouseModel> MstHouseModels1
		{
			get
			{
				return this._MstHouseModels1;
			}
			set
			{
				this._MstHouseModels1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstProject", Storage="_MstProjects", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstProject> MstProjects
		{
			get
			{
				return this._MstProjects;
			}
			set
			{
				this._MstProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstProject1", Storage="_MstProjects1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstProject> MstProjects1
		{
			get
			{
				return this._MstProjects1;
			}
			set
			{
				this._MstProjects1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit", Storage="_MstUnits", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<MstUnit> MstUnits
		{
			get
			{
				return this._MstUnits;
			}
			set
			{
				this._MstUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit1", Storage="_MstUnits1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<MstUnit> MstUnits1
		{
			get
			{
				return this._MstUnits1;
			}
			set
			{
				this._MstUnits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserRight", Storage="_MstUserRights", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUserRight> MstUserRights
		{
			get
			{
				return this._MstUserRights;
			}
			set
			{
				this._MstUserRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCommissionRequest", Storage="_TrnCommissionRequests", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnCommissionRequest> TrnCommissionRequests
		{
			get
			{
				return this._TrnCommissionRequests;
			}
			set
			{
				this._TrnCommissionRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCommissionRequest1", Storage="_TrnCommissionRequests1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnCommissionRequest> TrnCommissionRequests1
		{
			get
			{
				return this._TrnCommissionRequests1;
			}
			set
			{
				this._TrnCommissionRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCommissionRequest2", Storage="_TrnCommissionRequests2", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnCommissionRequest> TrnCommissionRequests2
		{
			get
			{
				return this._TrnCommissionRequests2;
			}
			set
			{
				this._TrnCommissionRequests2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCommissionRequest3", Storage="_TrnCommissionRequests3", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnCommissionRequest> TrnCommissionRequests3
		{
			get
			{
				return this._TrnCommissionRequests3;
			}
			set
			{
				this._TrnCommissionRequests3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCommissionRequest4", Storage="_TrnCommissionRequests4", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnCommissionRequest> TrnCommissionRequests4
		{
			get
			{
				return this._TrnCommissionRequests4;
			}
			set
			{
				this._TrnCommissionRequests4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnit", Storage="_TrnSoldUnits", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnSoldUnit> TrnSoldUnits
		{
			get
			{
				return this._TrnSoldUnits;
			}
			set
			{
				this._TrnSoldUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnit1", Storage="_TrnSoldUnits1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnSoldUnit> TrnSoldUnits1
		{
			get
			{
				return this._TrnSoldUnits1;
			}
			set
			{
				this._TrnSoldUnits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnit2", Storage="_TrnSoldUnits2", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnSoldUnit> TrnSoldUnits2
		{
			get
			{
				return this._TrnSoldUnits2;
			}
			set
			{
				this._TrnSoldUnits2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnit3", Storage="_TrnSoldUnits3", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnSoldUnit> TrnSoldUnits3
		{
			get
			{
				return this._TrnSoldUnits3;
			}
			set
			{
				this._TrnSoldUnits3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnit4", Storage="_TrnSoldUnits4", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnSoldUnit> TrnSoldUnits4
		{
			get
			{
				return this._TrnSoldUnits4;
			}
			set
			{
				this._TrnSoldUnits4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_MstUser", Storage="_AspNetUser", ThisKey="AspNetId", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._AspNetId = value.Id;
					}
					else
					{
						this._AspNetId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSoldUnitRequirementActivities(TrnSoldUnitRequirementActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnSoldUnitRequirementActivities(TrnSoldUnitRequirementActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstBrokers(MstBroker entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstBrokers(MstBroker entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstBrokers1(MstBroker entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstBrokers1(MstBroker entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstCheckLists(MstCheckList entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstCheckLists(MstCheckList entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstCheckLists1(MstCheckList entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstCheckLists1(MstCheckList entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstCustomers(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstCustomers(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstCustomers1(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstCustomers1(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstHouseModels(MstHouseModel entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstHouseModels(MstHouseModel entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstHouseModels1(MstHouseModel entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstHouseModels1(MstHouseModel entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstProjects(MstProject entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstProjects(MstProject entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstProjects1(MstProject entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstProjects1(MstProject entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstUnits1(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstUnits1(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstUserRights(MstUserRight entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUserRights(MstUserRight entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnCommissionRequests(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnCommissionRequests(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnCommissionRequests1(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnCommissionRequests1(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnCommissionRequests2(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnCommissionRequests2(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnCommissionRequests3(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnCommissionRequests3(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnCommissionRequests4(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnCommissionRequests4(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnSoldUnits(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnSoldUnits1(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnSoldUnits1(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnSoldUnits2(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnSoldUnits2(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnSoldUnits3(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnSoldUnits3(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnSoldUnits4(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnSoldUnits4(TrnSoldUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserRight")]
	public partial class MstUserRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _PageId;
		
		private bool _CanEdit;
		
		private bool _CanSave;
		
		private bool _CanLock;
		
		private bool _CanUnlock;
		
		private bool _CanPrint;
		
		private bool _CanDelete;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<SysPage> _SysPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanSaveChanging(bool value);
    partial void OnCanSaveChanged();
    partial void OnCanLockChanging(bool value);
    partial void OnCanLockChanged();
    partial void OnCanUnlockChanging(bool value);
    partial void OnCanUnlockChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    #endregion
		
		public MstUserRight()
		{
			this._MstUser = default(EntityRef<MstUser>);
			this._SysPage = default(EntityRef<SysPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL")]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._SysPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanSave", DbType="Bit NOT NULL")]
		public bool CanSave
		{
			get
			{
				return this._CanSave;
			}
			set
			{
				if ((this._CanSave != value))
				{
					this.OnCanSaveChanging(value);
					this.SendPropertyChanging();
					this._CanSave = value;
					this.SendPropertyChanged("CanSave");
					this.OnCanSaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanLock", DbType="Bit NOT NULL")]
		public bool CanLock
		{
			get
			{
				return this._CanLock;
			}
			set
			{
				if ((this._CanLock != value))
				{
					this.OnCanLockChanging(value);
					this.SendPropertyChanging();
					this._CanLock = value;
					this.SendPropertyChanged("CanLock");
					this.OnCanLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUnlock", DbType="Bit NOT NULL")]
		public bool CanUnlock
		{
			get
			{
				return this._CanUnlock;
			}
			set
			{
				if ((this._CanUnlock != value))
				{
					this.OnCanUnlockChanging(value);
					this.SendPropertyChanging();
					this._CanUnlock = value;
					this.SendPropertyChanged("CanUnlock");
					this.OnCanUnlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserRight", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUserRights.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUserRights.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysPage_MstUserRight", Storage="_SysPage", ThisKey="PageId", OtherKey="Id", IsForeignKey=true)]
		public SysPage SysPage
		{
			get
			{
				return this._SysPage.Entity;
			}
			set
			{
				SysPage previousValue = this._SysPage.Entity;
				if (((previousValue != value) 
							|| (this._SysPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysPage.Entity = null;
						previousValue.MstUserRights.Remove(this);
					}
					this._SysPage.Entity = value;
					if ((value != null))
					{
						value.MstUserRights.Add(this);
						this._PageId = value.Id;
					}
					else
					{
						this._PageId = default(int);
					}
					this.SendPropertyChanged("SysPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysDropDown")]
	public partial class SysDropDown : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Category;
		
		private string _Description;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public SysDropDown()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysPage")]
	public partial class SysPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Page;
		
		private string _Url;
		
		private EntitySet<MstUserRight> _MstUserRights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public SysPage()
		{
			this._MstUserRights = new EntitySet<MstUserRight>(new Action<MstUserRight>(this.attach_MstUserRights), new Action<MstUserRight>(this.detach_MstUserRights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysPage_MstUserRight", Storage="_MstUserRights", ThisKey="Id", OtherKey="PageId")]
		public EntitySet<MstUserRight> MstUserRights
		{
			get
			{
				return this._MstUserRights;
			}
			set
			{
				this._MstUserRights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUserRights(MstUserRight entity)
		{
			this.SendPropertyChanging();
			entity.SysPage = this;
		}
		
		private void detach_MstUserRights(MstUserRight entity)
		{
			this.SendPropertyChanging();
			entity.SysPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysSetting")]
	public partial class SysSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Company;
		
		private string _SoftwareVersion;
		
		private string _SoftwareDeveloper;
		
		private int _SoldUnitCheckedBy;
		
		private int _SoldUnitApprovedBy;
		
		private int _CommissionRequestCheckedBy;
		
		private int _CommissionRequestApprovedBy;
		
		private string _ProposalFootNote;
		
		private string _BrokerFootNote;
		
		private string _TotalInvestment;
		
		private string _PaymentOptions;
		
		private string _Financing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSoftwareVersionChanging(string value);
    partial void OnSoftwareVersionChanged();
    partial void OnSoftwareDeveloperChanging(string value);
    partial void OnSoftwareDeveloperChanged();
    partial void OnSoldUnitCheckedByChanging(int value);
    partial void OnSoldUnitCheckedByChanged();
    partial void OnSoldUnitApprovedByChanging(int value);
    partial void OnSoldUnitApprovedByChanged();
    partial void OnCommissionRequestCheckedByChanging(int value);
    partial void OnCommissionRequestCheckedByChanged();
    partial void OnCommissionRequestApprovedByChanging(int value);
    partial void OnCommissionRequestApprovedByChanged();
    partial void OnProposalFootNoteChanging(string value);
    partial void OnProposalFootNoteChanged();
    partial void OnBrokerFootNoteChanging(string value);
    partial void OnBrokerFootNoteChanged();
    partial void OnTotalInvestmentChanging(string value);
    partial void OnTotalInvestmentChanged();
    partial void OnPaymentOptionsChanging(string value);
    partial void OnPaymentOptionsChanged();
    partial void OnFinancingChanging(string value);
    partial void OnFinancingChanged();
    #endregion
		
		public SysSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftwareVersion", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SoftwareVersion
		{
			get
			{
				return this._SoftwareVersion;
			}
			set
			{
				if ((this._SoftwareVersion != value))
				{
					this.OnSoftwareVersionChanging(value);
					this.SendPropertyChanging();
					this._SoftwareVersion = value;
					this.SendPropertyChanged("SoftwareVersion");
					this.OnSoftwareVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftwareDeveloper", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SoftwareDeveloper
		{
			get
			{
				return this._SoftwareDeveloper;
			}
			set
			{
				if ((this._SoftwareDeveloper != value))
				{
					this.OnSoftwareDeveloperChanging(value);
					this.SendPropertyChanging();
					this._SoftwareDeveloper = value;
					this.SendPropertyChanged("SoftwareDeveloper");
					this.OnSoftwareDeveloperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldUnitCheckedBy", DbType="Int NOT NULL")]
		public int SoldUnitCheckedBy
		{
			get
			{
				return this._SoldUnitCheckedBy;
			}
			set
			{
				if ((this._SoldUnitCheckedBy != value))
				{
					this.OnSoldUnitCheckedByChanging(value);
					this.SendPropertyChanging();
					this._SoldUnitCheckedBy = value;
					this.SendPropertyChanged("SoldUnitCheckedBy");
					this.OnSoldUnitCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldUnitApprovedBy", DbType="Int NOT NULL")]
		public int SoldUnitApprovedBy
		{
			get
			{
				return this._SoldUnitApprovedBy;
			}
			set
			{
				if ((this._SoldUnitApprovedBy != value))
				{
					this.OnSoldUnitApprovedByChanging(value);
					this.SendPropertyChanging();
					this._SoldUnitApprovedBy = value;
					this.SendPropertyChanged("SoldUnitApprovedBy");
					this.OnSoldUnitApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionRequestCheckedBy", DbType="Int NOT NULL")]
		public int CommissionRequestCheckedBy
		{
			get
			{
				return this._CommissionRequestCheckedBy;
			}
			set
			{
				if ((this._CommissionRequestCheckedBy != value))
				{
					this.OnCommissionRequestCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CommissionRequestCheckedBy = value;
					this.SendPropertyChanged("CommissionRequestCheckedBy");
					this.OnCommissionRequestCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionRequestApprovedBy", DbType="Int NOT NULL")]
		public int CommissionRequestApprovedBy
		{
			get
			{
				return this._CommissionRequestApprovedBy;
			}
			set
			{
				if ((this._CommissionRequestApprovedBy != value))
				{
					this.OnCommissionRequestApprovedByChanging(value);
					this.SendPropertyChanging();
					this._CommissionRequestApprovedBy = value;
					this.SendPropertyChanged("CommissionRequestApprovedBy");
					this.OnCommissionRequestApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposalFootNote", DbType="NVarChar(MAX)")]
		public string ProposalFootNote
		{
			get
			{
				return this._ProposalFootNote;
			}
			set
			{
				if ((this._ProposalFootNote != value))
				{
					this.OnProposalFootNoteChanging(value);
					this.SendPropertyChanging();
					this._ProposalFootNote = value;
					this.SendPropertyChanged("ProposalFootNote");
					this.OnProposalFootNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerFootNote", DbType="NVarChar(MAX)")]
		public string BrokerFootNote
		{
			get
			{
				return this._BrokerFootNote;
			}
			set
			{
				if ((this._BrokerFootNote != value))
				{
					this.OnBrokerFootNoteChanging(value);
					this.SendPropertyChanging();
					this._BrokerFootNote = value;
					this.SendPropertyChanged("BrokerFootNote");
					this.OnBrokerFootNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInvestment", DbType="NVarChar(MAX)")]
		public string TotalInvestment
		{
			get
			{
				return this._TotalInvestment;
			}
			set
			{
				if ((this._TotalInvestment != value))
				{
					this.OnTotalInvestmentChanging(value);
					this.SendPropertyChanging();
					this._TotalInvestment = value;
					this.SendPropertyChanged("TotalInvestment");
					this.OnTotalInvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentOptions", DbType="NVarChar(MAX)")]
		public string PaymentOptions
		{
			get
			{
				return this._PaymentOptions;
			}
			set
			{
				if ((this._PaymentOptions != value))
				{
					this.OnPaymentOptionsChanging(value);
					this.SendPropertyChanging();
					this._PaymentOptions = value;
					this.SendPropertyChanged("PaymentOptions");
					this.OnPaymentOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Financing", DbType="NVarChar(MAX)")]
		public string Financing
		{
			get
			{
				return this._Financing;
			}
			set
			{
				if ((this._Financing != value))
				{
					this.OnFinancingChanging(value);
					this.SendPropertyChanging();
					this._Financing = value;
					this.SendPropertyChanged("Financing");
					this.OnFinancingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCommissionRequest")]
	public partial class TrnCommissionRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CommissionRequestNumber;
		
		private System.DateTime _CommissionRequestDate;
		
		private int _BrokerId;
		
		private int _SoldUnitId;
		
		private string _CommissionNumber;
		
		private decimal _Amount;
		
		private string _Remarks;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<MstBroker> _MstBroker;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<TrnSoldUnit> _TrnSoldUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCommissionRequestNumberChanging(string value);
    partial void OnCommissionRequestNumberChanged();
    partial void OnCommissionRequestDateChanging(System.DateTime value);
    partial void OnCommissionRequestDateChanged();
    partial void OnBrokerIdChanging(int value);
    partial void OnBrokerIdChanged();
    partial void OnSoldUnitIdChanging(int value);
    partial void OnSoldUnitIdChanged();
    partial void OnCommissionNumberChanging(string value);
    partial void OnCommissionNumberChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnCommissionRequest()
		{
			this._MstBroker = default(EntityRef<MstBroker>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._TrnSoldUnit = default(EntityRef<TrnSoldUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionRequestNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CommissionRequestNumber
		{
			get
			{
				return this._CommissionRequestNumber;
			}
			set
			{
				if ((this._CommissionRequestNumber != value))
				{
					this.OnCommissionRequestNumberChanging(value);
					this.SendPropertyChanging();
					this._CommissionRequestNumber = value;
					this.SendPropertyChanged("CommissionRequestNumber");
					this.OnCommissionRequestNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionRequestDate", DbType="Date NOT NULL")]
		public System.DateTime CommissionRequestDate
		{
			get
			{
				return this._CommissionRequestDate;
			}
			set
			{
				if ((this._CommissionRequestDate != value))
				{
					this.OnCommissionRequestDateChanging(value);
					this.SendPropertyChanging();
					this._CommissionRequestDate = value;
					this.SendPropertyChanged("CommissionRequestDate");
					this.OnCommissionRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerId", DbType="Int NOT NULL")]
		public int BrokerId
		{
			get
			{
				return this._BrokerId;
			}
			set
			{
				if ((this._BrokerId != value))
				{
					if (this._MstBroker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIdChanging(value);
					this.SendPropertyChanging();
					this._BrokerId = value;
					this.SendPropertyChanged("BrokerId");
					this.OnBrokerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldUnitId", DbType="Int NOT NULL")]
		public int SoldUnitId
		{
			get
			{
				return this._SoldUnitId;
			}
			set
			{
				if ((this._SoldUnitId != value))
				{
					if (this._TrnSoldUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoldUnitIdChanging(value);
					this.SendPropertyChanging();
					this._SoldUnitId = value;
					this.SendPropertyChanged("SoldUnitId");
					this.OnSoldUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CommissionNumber
		{
			get
			{
				return this._CommissionNumber;
			}
			set
			{
				if ((this._CommissionNumber != value))
				{
					this.OnCommissionNumberChanging(value);
					this.SendPropertyChanging();
					this._CommissionNumber = value;
					this.SendPropertyChanged("CommissionNumber");
					this.OnCommissionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBroker_TrnCommissionRequest", Storage="_MstBroker", ThisKey="BrokerId", OtherKey="Id", IsForeignKey=true)]
		public MstBroker MstBroker
		{
			get
			{
				return this._MstBroker.Entity;
			}
			set
			{
				MstBroker previousValue = this._MstBroker.Entity;
				if (((previousValue != value) 
							|| (this._MstBroker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBroker.Entity = null;
						previousValue.TrnCommissionRequests.Remove(this);
					}
					this._MstBroker.Entity = value;
					if ((value != null))
					{
						value.TrnCommissionRequests.Add(this);
						this._BrokerId = value.Id;
					}
					else
					{
						this._BrokerId = default(int);
					}
					this.SendPropertyChanged("MstBroker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCommissionRequest", Storage="_MstUser", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnCommissionRequests.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnCommissionRequests.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCommissionRequest1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnCommissionRequests1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnCommissionRequests1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCommissionRequest2", Storage="_MstUser2", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnCommissionRequests2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnCommissionRequests2.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCommissionRequest3", Storage="_MstUser3", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnCommissionRequests3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnCommissionRequests3.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCommissionRequest4", Storage="_MstUser4", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnCommissionRequests4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnCommissionRequests4.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSoldUnit_TrnCommissionRequest", Storage="_TrnSoldUnit", ThisKey="SoldUnitId", OtherKey="Id", IsForeignKey=true)]
		public TrnSoldUnit TrnSoldUnit
		{
			get
			{
				return this._TrnSoldUnit.Entity;
			}
			set
			{
				TrnSoldUnit previousValue = this._TrnSoldUnit.Entity;
				if (((previousValue != value) 
							|| (this._TrnSoldUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSoldUnit.Entity = null;
						previousValue.TrnCommissionRequests.Remove(this);
					}
					this._TrnSoldUnit.Entity = value;
					if ((value != null))
					{
						value.TrnCommissionRequests.Add(this);
						this._SoldUnitId = value.Id;
					}
					else
					{
						this._SoldUnitId = default(int);
					}
					this.SendPropertyChanged("TrnSoldUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSoldUnit")]
	public partial class TrnSoldUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SoldUnitNumber;
		
		private System.DateTime _SoldUnitDate;
		
		private int _ProjectId;
		
		private int _UnitId;
		
		private int _CustomerId;
		
		private int _BrokerId;
		
		private string _Agent;
		
		private string _BrokerCoordinator;
		
		private int _CheckListId;
		
		private decimal _Price;
		
		private decimal _EquityValue;
		
		private decimal _EquityPercent;
		
		private decimal _Discount;
		
		private decimal _Reservation;
		
		private decimal _NetEquity;
		
		private decimal _NetEquityInterest;
		
		private decimal _NetEquityNoOfPayments;
		
		private decimal _NetEquityAmortization;
		
		private decimal _Balance;
		
		private decimal _BalanceInterest;
		
		private decimal _BalanceNoOfPayments;
		
		private decimal _BalanceAmortization;
		
		private string _TotalInvestment;
		
		private string _PaymentOptions;
		
		private string _Financing;
		
		private string _Remarks;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCommissionRequest> _TrnCommissionRequests;
		
		private EntitySet<TrnSoldUnitEquitySchedule> _TrnSoldUnitEquitySchedules;
		
		private EntitySet<TrnSoldUnitRequirement> _TrnSoldUnitRequirements;
		
		private EntityRef<MstBroker> _MstBroker;
		
		private EntityRef<MstCheckList> _MstCheckList;
		
		private EntityRef<MstCustomer> _MstCustomer;
		
		private EntityRef<MstProject> _MstProject;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSoldUnitNumberChanging(string value);
    partial void OnSoldUnitNumberChanged();
    partial void OnSoldUnitDateChanging(System.DateTime value);
    partial void OnSoldUnitDateChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnBrokerIdChanging(int value);
    partial void OnBrokerIdChanged();
    partial void OnAgentChanging(string value);
    partial void OnAgentChanged();
    partial void OnBrokerCoordinatorChanging(string value);
    partial void OnBrokerCoordinatorChanged();
    partial void OnCheckListIdChanging(int value);
    partial void OnCheckListIdChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnEquityValueChanging(decimal value);
    partial void OnEquityValueChanged();
    partial void OnEquityPercentChanging(decimal value);
    partial void OnEquityPercentChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnReservationChanging(decimal value);
    partial void OnReservationChanged();
    partial void OnNetEquityChanging(decimal value);
    partial void OnNetEquityChanged();
    partial void OnNetEquityInterestChanging(decimal value);
    partial void OnNetEquityInterestChanged();
    partial void OnNetEquityNoOfPaymentsChanging(decimal value);
    partial void OnNetEquityNoOfPaymentsChanged();
    partial void OnNetEquityAmortizationChanging(decimal value);
    partial void OnNetEquityAmortizationChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    partial void OnBalanceInterestChanging(decimal value);
    partial void OnBalanceInterestChanged();
    partial void OnBalanceNoOfPaymentsChanging(decimal value);
    partial void OnBalanceNoOfPaymentsChanged();
    partial void OnBalanceAmortizationChanging(decimal value);
    partial void OnBalanceAmortizationChanged();
    partial void OnTotalInvestmentChanging(string value);
    partial void OnTotalInvestmentChanged();
    partial void OnPaymentOptionsChanging(string value);
    partial void OnPaymentOptionsChanged();
    partial void OnFinancingChanging(string value);
    partial void OnFinancingChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnSoldUnit()
		{
			this._TrnCommissionRequests = new EntitySet<TrnCommissionRequest>(new Action<TrnCommissionRequest>(this.attach_TrnCommissionRequests), new Action<TrnCommissionRequest>(this.detach_TrnCommissionRequests));
			this._TrnSoldUnitEquitySchedules = new EntitySet<TrnSoldUnitEquitySchedule>(new Action<TrnSoldUnitEquitySchedule>(this.attach_TrnSoldUnitEquitySchedules), new Action<TrnSoldUnitEquitySchedule>(this.detach_TrnSoldUnitEquitySchedules));
			this._TrnSoldUnitRequirements = new EntitySet<TrnSoldUnitRequirement>(new Action<TrnSoldUnitRequirement>(this.attach_TrnSoldUnitRequirements), new Action<TrnSoldUnitRequirement>(this.detach_TrnSoldUnitRequirements));
			this._MstBroker = default(EntityRef<MstBroker>);
			this._MstCheckList = default(EntityRef<MstCheckList>);
			this._MstCustomer = default(EntityRef<MstCustomer>);
			this._MstProject = default(EntityRef<MstProject>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldUnitNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SoldUnitNumber
		{
			get
			{
				return this._SoldUnitNumber;
			}
			set
			{
				if ((this._SoldUnitNumber != value))
				{
					this.OnSoldUnitNumberChanging(value);
					this.SendPropertyChanging();
					this._SoldUnitNumber = value;
					this.SendPropertyChanged("SoldUnitNumber");
					this.OnSoldUnitNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldUnitDate", DbType="Date NOT NULL")]
		public System.DateTime SoldUnitDate
		{
			get
			{
				return this._SoldUnitDate;
			}
			set
			{
				if ((this._SoldUnitDate != value))
				{
					this.OnSoldUnitDateChanging(value);
					this.SendPropertyChanging();
					this._SoldUnitDate = value;
					this.SendPropertyChanged("SoldUnitDate");
					this.OnSoldUnitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._MstProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerId", DbType="Int NOT NULL")]
		public int BrokerId
		{
			get
			{
				return this._BrokerId;
			}
			set
			{
				if ((this._BrokerId != value))
				{
					if (this._MstBroker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIdChanging(value);
					this.SendPropertyChanging();
					this._BrokerId = value;
					this.SendPropertyChanged("BrokerId");
					this.OnBrokerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agent", DbType="NVarChar(255)")]
		public string Agent
		{
			get
			{
				return this._Agent;
			}
			set
			{
				if ((this._Agent != value))
				{
					this.OnAgentChanging(value);
					this.SendPropertyChanging();
					this._Agent = value;
					this.SendPropertyChanged("Agent");
					this.OnAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerCoordinator", DbType="NVarChar(255)")]
		public string BrokerCoordinator
		{
			get
			{
				return this._BrokerCoordinator;
			}
			set
			{
				if ((this._BrokerCoordinator != value))
				{
					this.OnBrokerCoordinatorChanging(value);
					this.SendPropertyChanging();
					this._BrokerCoordinator = value;
					this.SendPropertyChanged("BrokerCoordinator");
					this.OnBrokerCoordinatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckListId", DbType="Int NOT NULL")]
		public int CheckListId
		{
			get
			{
				return this._CheckListId;
			}
			set
			{
				if ((this._CheckListId != value))
				{
					if (this._MstCheckList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckListIdChanging(value);
					this.SendPropertyChanging();
					this._CheckListId = value;
					this.SendPropertyChanged("CheckListId");
					this.OnCheckListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquityValue", DbType="Decimal(18,5) NOT NULL")]
		public decimal EquityValue
		{
			get
			{
				return this._EquityValue;
			}
			set
			{
				if ((this._EquityValue != value))
				{
					this.OnEquityValueChanging(value);
					this.SendPropertyChanging();
					this._EquityValue = value;
					this.SendPropertyChanged("EquityValue");
					this.OnEquityValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquityPercent", DbType="Decimal(18,5) NOT NULL")]
		public decimal EquityPercent
		{
			get
			{
				return this._EquityPercent;
			}
			set
			{
				if ((this._EquityPercent != value))
				{
					this.OnEquityPercentChanging(value);
					this.SendPropertyChanging();
					this._EquityPercent = value;
					this.SendPropertyChanged("EquityPercent");
					this.OnEquityPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reservation", DbType="Decimal(18,5) NOT NULL")]
		public decimal Reservation
		{
			get
			{
				return this._Reservation;
			}
			set
			{
				if ((this._Reservation != value))
				{
					this.OnReservationChanging(value);
					this.SendPropertyChanging();
					this._Reservation = value;
					this.SendPropertyChanged("Reservation");
					this.OnReservationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetEquity", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetEquity
		{
			get
			{
				return this._NetEquity;
			}
			set
			{
				if ((this._NetEquity != value))
				{
					this.OnNetEquityChanging(value);
					this.SendPropertyChanging();
					this._NetEquity = value;
					this.SendPropertyChanged("NetEquity");
					this.OnNetEquityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetEquityInterest", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetEquityInterest
		{
			get
			{
				return this._NetEquityInterest;
			}
			set
			{
				if ((this._NetEquityInterest != value))
				{
					this.OnNetEquityInterestChanging(value);
					this.SendPropertyChanging();
					this._NetEquityInterest = value;
					this.SendPropertyChanged("NetEquityInterest");
					this.OnNetEquityInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetEquityNoOfPayments", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetEquityNoOfPayments
		{
			get
			{
				return this._NetEquityNoOfPayments;
			}
			set
			{
				if ((this._NetEquityNoOfPayments != value))
				{
					this.OnNetEquityNoOfPaymentsChanging(value);
					this.SendPropertyChanging();
					this._NetEquityNoOfPayments = value;
					this.SendPropertyChanged("NetEquityNoOfPayments");
					this.OnNetEquityNoOfPaymentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetEquityAmortization", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetEquityAmortization
		{
			get
			{
				return this._NetEquityAmortization;
			}
			set
			{
				if ((this._NetEquityAmortization != value))
				{
					this.OnNetEquityAmortizationChanging(value);
					this.SendPropertyChanging();
					this._NetEquityAmortization = value;
					this.SendPropertyChanged("NetEquityAmortization");
					this.OnNetEquityAmortizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,5) NOT NULL")]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceInterest", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceInterest
		{
			get
			{
				return this._BalanceInterest;
			}
			set
			{
				if ((this._BalanceInterest != value))
				{
					this.OnBalanceInterestChanging(value);
					this.SendPropertyChanging();
					this._BalanceInterest = value;
					this.SendPropertyChanged("BalanceInterest");
					this.OnBalanceInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceNoOfPayments", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceNoOfPayments
		{
			get
			{
				return this._BalanceNoOfPayments;
			}
			set
			{
				if ((this._BalanceNoOfPayments != value))
				{
					this.OnBalanceNoOfPaymentsChanging(value);
					this.SendPropertyChanging();
					this._BalanceNoOfPayments = value;
					this.SendPropertyChanged("BalanceNoOfPayments");
					this.OnBalanceNoOfPaymentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmortization", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceAmortization
		{
			get
			{
				return this._BalanceAmortization;
			}
			set
			{
				if ((this._BalanceAmortization != value))
				{
					this.OnBalanceAmortizationChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmortization = value;
					this.SendPropertyChanged("BalanceAmortization");
					this.OnBalanceAmortizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInvestment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TotalInvestment
		{
			get
			{
				return this._TotalInvestment;
			}
			set
			{
				if ((this._TotalInvestment != value))
				{
					this.OnTotalInvestmentChanging(value);
					this.SendPropertyChanging();
					this._TotalInvestment = value;
					this.SendPropertyChanged("TotalInvestment");
					this.OnTotalInvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentOptions", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PaymentOptions
		{
			get
			{
				return this._PaymentOptions;
			}
			set
			{
				if ((this._PaymentOptions != value))
				{
					this.OnPaymentOptionsChanging(value);
					this.SendPropertyChanging();
					this._PaymentOptions = value;
					this.SendPropertyChanged("PaymentOptions");
					this.OnPaymentOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Financing", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Financing
		{
			get
			{
				return this._Financing;
			}
			set
			{
				if ((this._Financing != value))
				{
					this.OnFinancingChanging(value);
					this.SendPropertyChanging();
					this._Financing = value;
					this.SendPropertyChanged("Financing");
					this.OnFinancingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSoldUnit_TrnCommissionRequest", Storage="_TrnCommissionRequests", ThisKey="Id", OtherKey="SoldUnitId")]
		public EntitySet<TrnCommissionRequest> TrnCommissionRequests
		{
			get
			{
				return this._TrnCommissionRequests;
			}
			set
			{
				this._TrnCommissionRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSoldUnit_TrnSoldUnitEquitySchedule", Storage="_TrnSoldUnitEquitySchedules", ThisKey="Id", OtherKey="SoldUnitId")]
		public EntitySet<TrnSoldUnitEquitySchedule> TrnSoldUnitEquitySchedules
		{
			get
			{
				return this._TrnSoldUnitEquitySchedules;
			}
			set
			{
				this._TrnSoldUnitEquitySchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSoldUnit_TrnSoldUnitRequirement", Storage="_TrnSoldUnitRequirements", ThisKey="Id", OtherKey="SoldUnitId")]
		public EntitySet<TrnSoldUnitRequirement> TrnSoldUnitRequirements
		{
			get
			{
				return this._TrnSoldUnitRequirements;
			}
			set
			{
				this._TrnSoldUnitRequirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBroker_TrnSoldUnit", Storage="_MstBroker", ThisKey="BrokerId", OtherKey="Id", IsForeignKey=true)]
		public MstBroker MstBroker
		{
			get
			{
				return this._MstBroker.Entity;
			}
			set
			{
				MstBroker previousValue = this._MstBroker.Entity;
				if (((previousValue != value) 
							|| (this._MstBroker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBroker.Entity = null;
						previousValue.TrnSoldUnits.Remove(this);
					}
					this._MstBroker.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnits.Add(this);
						this._BrokerId = value.Id;
					}
					else
					{
						this._BrokerId = default(int);
					}
					this.SendPropertyChanged("MstBroker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCheckList_TrnSoldUnit", Storage="_MstCheckList", ThisKey="CheckListId", OtherKey="Id", IsForeignKey=true)]
		public MstCheckList MstCheckList
		{
			get
			{
				return this._MstCheckList.Entity;
			}
			set
			{
				MstCheckList previousValue = this._MstCheckList.Entity;
				if (((previousValue != value) 
							|| (this._MstCheckList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCheckList.Entity = null;
						previousValue.TrnSoldUnits.Remove(this);
					}
					this._MstCheckList.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnits.Add(this);
						this._CheckListId = value.Id;
					}
					else
					{
						this._CheckListId = default(int);
					}
					this.SendPropertyChanged("MstCheckList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCustomer_TrnSoldUnit", Storage="_MstCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstCustomer MstCustomer
		{
			get
			{
				return this._MstCustomer.Entity;
			}
			set
			{
				MstCustomer previousValue = this._MstCustomer.Entity;
				if (((previousValue != value) 
							|| (this._MstCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCustomer.Entity = null;
						previousValue.TrnSoldUnits.Remove(this);
					}
					this._MstCustomer.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnits.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstProject_TrnSoldUnit", Storage="_MstProject", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true)]
		public MstProject MstProject
		{
			get
			{
				return this._MstProject.Entity;
			}
			set
			{
				MstProject previousValue = this._MstProject.Entity;
				if (((previousValue != value) 
							|| (this._MstProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstProject.Entity = null;
						previousValue.TrnSoldUnits.Remove(this);
					}
					this._MstProject.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnits.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("MstProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSoldUnit", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnSoldUnits.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnits.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnit", Storage="_MstUser", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnSoldUnits.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnits.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnit1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnSoldUnits1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnits1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnit2", Storage="_MstUser2", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnSoldUnits2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnits2.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnit3", Storage="_MstUser3", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnSoldUnits3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnits3.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSoldUnit4", Storage="_MstUser4", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnSoldUnits4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnits4.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCommissionRequests(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.TrnSoldUnit = this;
		}
		
		private void detach_TrnCommissionRequests(TrnCommissionRequest entity)
		{
			this.SendPropertyChanging();
			entity.TrnSoldUnit = null;
		}
		
		private void attach_TrnSoldUnitEquitySchedules(TrnSoldUnitEquitySchedule entity)
		{
			this.SendPropertyChanging();
			entity.TrnSoldUnit = this;
		}
		
		private void detach_TrnSoldUnitEquitySchedules(TrnSoldUnitEquitySchedule entity)
		{
			this.SendPropertyChanging();
			entity.TrnSoldUnit = null;
		}
		
		private void attach_TrnSoldUnitRequirements(TrnSoldUnitRequirement entity)
		{
			this.SendPropertyChanging();
			entity.TrnSoldUnit = this;
		}
		
		private void detach_TrnSoldUnitRequirements(TrnSoldUnitRequirement entity)
		{
			this.SendPropertyChanging();
			entity.TrnSoldUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSoldUnitEquitySchedule")]
	public partial class TrnSoldUnitEquitySchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SoldUnitId;
		
		private System.DateTime _PaymentDate;
		
		private decimal _Amortization;
		
		private string _CheckNumber;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private string _CheckBank;
		
		private string _Remarks;
		
		private EntityRef<TrnSoldUnit> _TrnSoldUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSoldUnitIdChanging(int value);
    partial void OnSoldUnitIdChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnAmortizationChanging(decimal value);
    partial void OnAmortizationChanged();
    partial void OnCheckNumberChanging(string value);
    partial void OnCheckNumberChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnCheckBankChanging(string value);
    partial void OnCheckBankChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public TrnSoldUnitEquitySchedule()
		{
			this._TrnSoldUnit = default(EntityRef<TrnSoldUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldUnitId", DbType="Int NOT NULL")]
		public int SoldUnitId
		{
			get
			{
				return this._SoldUnitId;
			}
			set
			{
				if ((this._SoldUnitId != value))
				{
					if (this._TrnSoldUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoldUnitIdChanging(value);
					this.SendPropertyChanging();
					this._SoldUnitId = value;
					this.SendPropertyChanged("SoldUnitId");
					this.OnSoldUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amortization", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amortization
		{
			get
			{
				return this._Amortization;
			}
			set
			{
				if ((this._Amortization != value))
				{
					this.OnAmortizationChanging(value);
					this.SendPropertyChanging();
					this._Amortization = value;
					this.SendPropertyChanged("Amortization");
					this.OnAmortizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="NVarChar(50)")]
		public string CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBank", DbType="NVarChar(100)")]
		public string CheckBank
		{
			get
			{
				return this._CheckBank;
			}
			set
			{
				if ((this._CheckBank != value))
				{
					this.OnCheckBankChanging(value);
					this.SendPropertyChanging();
					this._CheckBank = value;
					this.SendPropertyChanged("CheckBank");
					this.OnCheckBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSoldUnit_TrnSoldUnitEquitySchedule", Storage="_TrnSoldUnit", ThisKey="SoldUnitId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnSoldUnit TrnSoldUnit
		{
			get
			{
				return this._TrnSoldUnit.Entity;
			}
			set
			{
				TrnSoldUnit previousValue = this._TrnSoldUnit.Entity;
				if (((previousValue != value) 
							|| (this._TrnSoldUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSoldUnit.Entity = null;
						previousValue.TrnSoldUnitEquitySchedules.Remove(this);
					}
					this._TrnSoldUnit.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnitEquitySchedules.Add(this);
						this._SoldUnitId = value.Id;
					}
					else
					{
						this._SoldUnitId = default(int);
					}
					this.SendPropertyChanged("TrnSoldUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSoldUnitRequirement")]
	public partial class TrnSoldUnitRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SoldUnitId;
		
		private int _CheckListRequirementId;
		
		private string _Attachment1;
		
		private string _Attachment2;
		
		private string _Attachment3;
		
		private string _Attachment4;
		
		private string _Attachment5;
		
		private string _Remarks;
		
		private string _Status;
		
		private System.DateTime _StatusDate;
		
		private EntitySet<TrnSoldUnitRequirementActivity> _TrnSoldUnitRequirementActivities;
		
		private EntityRef<MstCheckListRequirement> _MstCheckListRequirement;
		
		private EntityRef<TrnSoldUnit> _TrnSoldUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSoldUnitIdChanging(int value);
    partial void OnSoldUnitIdChanged();
    partial void OnCheckListRequirementIdChanging(int value);
    partial void OnCheckListRequirementIdChanged();
    partial void OnAttachment1Changing(string value);
    partial void OnAttachment1Changed();
    partial void OnAttachment2Changing(string value);
    partial void OnAttachment2Changed();
    partial void OnAttachment3Changing(string value);
    partial void OnAttachment3Changed();
    partial void OnAttachment4Changing(string value);
    partial void OnAttachment4Changed();
    partial void OnAttachment5Changing(string value);
    partial void OnAttachment5Changed();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnStatusDateChanging(System.DateTime value);
    partial void OnStatusDateChanged();
    #endregion
		
		public TrnSoldUnitRequirement()
		{
			this._TrnSoldUnitRequirementActivities = new EntitySet<TrnSoldUnitRequirementActivity>(new Action<TrnSoldUnitRequirementActivity>(this.attach_TrnSoldUnitRequirementActivities), new Action<TrnSoldUnitRequirementActivity>(this.detach_TrnSoldUnitRequirementActivities));
			this._MstCheckListRequirement = default(EntityRef<MstCheckListRequirement>);
			this._TrnSoldUnit = default(EntityRef<TrnSoldUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldUnitId", DbType="Int NOT NULL")]
		public int SoldUnitId
		{
			get
			{
				return this._SoldUnitId;
			}
			set
			{
				if ((this._SoldUnitId != value))
				{
					if (this._TrnSoldUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoldUnitIdChanging(value);
					this.SendPropertyChanging();
					this._SoldUnitId = value;
					this.SendPropertyChanged("SoldUnitId");
					this.OnSoldUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckListRequirementId", DbType="Int NOT NULL")]
		public int CheckListRequirementId
		{
			get
			{
				return this._CheckListRequirementId;
			}
			set
			{
				if ((this._CheckListRequirementId != value))
				{
					if (this._MstCheckListRequirement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckListRequirementIdChanging(value);
					this.SendPropertyChanging();
					this._CheckListRequirementId = value;
					this.SendPropertyChanged("CheckListRequirementId");
					this.OnCheckListRequirementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment1", DbType="NVarChar(255)")]
		public string Attachment1
		{
			get
			{
				return this._Attachment1;
			}
			set
			{
				if ((this._Attachment1 != value))
				{
					this.OnAttachment1Changing(value);
					this.SendPropertyChanging();
					this._Attachment1 = value;
					this.SendPropertyChanged("Attachment1");
					this.OnAttachment1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment2", DbType="NVarChar(255)")]
		public string Attachment2
		{
			get
			{
				return this._Attachment2;
			}
			set
			{
				if ((this._Attachment2 != value))
				{
					this.OnAttachment2Changing(value);
					this.SendPropertyChanging();
					this._Attachment2 = value;
					this.SendPropertyChanged("Attachment2");
					this.OnAttachment2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment3", DbType="NVarChar(255)")]
		public string Attachment3
		{
			get
			{
				return this._Attachment3;
			}
			set
			{
				if ((this._Attachment3 != value))
				{
					this.OnAttachment3Changing(value);
					this.SendPropertyChanging();
					this._Attachment3 = value;
					this.SendPropertyChanged("Attachment3");
					this.OnAttachment3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment4", DbType="NVarChar(255)")]
		public string Attachment4
		{
			get
			{
				return this._Attachment4;
			}
			set
			{
				if ((this._Attachment4 != value))
				{
					this.OnAttachment4Changing(value);
					this.SendPropertyChanging();
					this._Attachment4 = value;
					this.SendPropertyChanged("Attachment4");
					this.OnAttachment4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment5", DbType="NVarChar(255)")]
		public string Attachment5
		{
			get
			{
				return this._Attachment5;
			}
			set
			{
				if ((this._Attachment5 != value))
				{
					this.OnAttachment5Changing(value);
					this.SendPropertyChanging();
					this._Attachment5 = value;
					this.SendPropertyChanged("Attachment5");
					this.OnAttachment5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDate", DbType="Date NOT NULL")]
		public System.DateTime StatusDate
		{
			get
			{
				return this._StatusDate;
			}
			set
			{
				if ((this._StatusDate != value))
				{
					this.OnStatusDateChanging(value);
					this.SendPropertyChanging();
					this._StatusDate = value;
					this.SendPropertyChanged("StatusDate");
					this.OnStatusDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSoldUnitRequirement_TrnSoldUnitRequirementActivity", Storage="_TrnSoldUnitRequirementActivities", ThisKey="Id", OtherKey="SoldUnitRequirementId")]
		public EntitySet<TrnSoldUnitRequirementActivity> TrnSoldUnitRequirementActivities
		{
			get
			{
				return this._TrnSoldUnitRequirementActivities;
			}
			set
			{
				this._TrnSoldUnitRequirementActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCheckListRequirement_TrnSoldUnitRequirement", Storage="_MstCheckListRequirement", ThisKey="CheckListRequirementId", OtherKey="Id", IsForeignKey=true)]
		public MstCheckListRequirement MstCheckListRequirement
		{
			get
			{
				return this._MstCheckListRequirement.Entity;
			}
			set
			{
				MstCheckListRequirement previousValue = this._MstCheckListRequirement.Entity;
				if (((previousValue != value) 
							|| (this._MstCheckListRequirement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCheckListRequirement.Entity = null;
						previousValue.TrnSoldUnitRequirements.Remove(this);
					}
					this._MstCheckListRequirement.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnitRequirements.Add(this);
						this._CheckListRequirementId = value.Id;
					}
					else
					{
						this._CheckListRequirementId = default(int);
					}
					this.SendPropertyChanged("MstCheckListRequirement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSoldUnit_TrnSoldUnitRequirement", Storage="_TrnSoldUnit", ThisKey="SoldUnitId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnSoldUnit TrnSoldUnit
		{
			get
			{
				return this._TrnSoldUnit.Entity;
			}
			set
			{
				TrnSoldUnit previousValue = this._TrnSoldUnit.Entity;
				if (((previousValue != value) 
							|| (this._TrnSoldUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSoldUnit.Entity = null;
						previousValue.TrnSoldUnitRequirements.Remove(this);
					}
					this._TrnSoldUnit.Entity = value;
					if ((value != null))
					{
						value.TrnSoldUnitRequirements.Add(this);
						this._SoldUnitId = value.Id;
					}
					else
					{
						this._SoldUnitId = default(int);
					}
					this.SendPropertyChanged("TrnSoldUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSoldUnitRequirementActivities(TrnSoldUnitRequirementActivity entity)
		{
			this.SendPropertyChanging();
			entity.TrnSoldUnitRequirement = this;
		}
		
		private void detach_TrnSoldUnitRequirementActivities(TrnSoldUnitRequirementActivity entity)
		{
			this.SendPropertyChanging();
			entity.TrnSoldUnitRequirement = null;
		}
	}
}
#pragma warning restore 1591
